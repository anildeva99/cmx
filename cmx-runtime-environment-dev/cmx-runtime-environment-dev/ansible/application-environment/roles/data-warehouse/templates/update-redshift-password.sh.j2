#!/bin/bash

export dburl="jdbc:redshift://{{ redshift_cluster_facts.results[0].endpoint.address }}:{{ redshift_cluster_facts.results[0].endpoint.port }}/{{ application_data_warehouse_name }}?ssl=true&sslmode=require"

echo "Enter the Redshift cluster {{ application_data_warehouse_admin_username }} password: "
read rootpassword
export PGPASSWORD=$rootpassword

# Update password on developers
{% for developer in developers %}
echo "Enter new password for role '{{ developer.name }}' (blank to skip): "
read password

if [ "$password" != "" ]; then
  # Note: localhost connection assumes SSH tunnel through bastion host.
  psql -a -b -d {{ application_data_warehouse_name }} -h localhost \
    -U {{ application_data_warehouse_admin_username }} -p {{ redshift_cluster_facts.results[0].endpoint.port }} -c "\x" -c "ALTER USER {{ developer.name }} WITH PASSWORD '$password'"
fi
{% endfor %}

# Update password on additional users
{% for data_warehouse_additional_user in data_warehouse_additional_users %}
echo "Enter new password for role '{{ data_warehouse_additional_user }}' (blank to skip): "
read password

if [ "$password" != "" ]; then
  # Note: localhost connection assumes SSH tunnel through bastion host.
  psql -a -b -d {{ application_data_warehouse_name }} -h localhost \
    -U {{ application_data_warehouse_admin_username }} -p {{ redshift_cluster_facts.results[0].endpoint.port }} -c "\x"  -c "ALTER USER {{ data_warehouse_additional_user }} WITH PASSWORD '$password'"

    # Update AWS secrets
    aws secretsmanager update-secret  --region "{{ region }}" \
      --secret-id "CodaMetrixApplication/DataWarehouseAdditionalUsers/{{ env }}-{{ data_warehouse_additional_user | lower }}" \
      --description 'Credentials for "{{ data_warehouse_additional_user }}" in the "{{ env }}" application environment.' \
      --kms-key-id '{{ application_secrets_kms_key_alias }}' \
      --secret-string '{"dbusername":"{{ data_warehouse_additional_user | lower }}","dbpassword":"'$password'","dburl":"'$dburl'"}'
fi
{% endfor %}

# Update password on additional RW users
{% for data_warehouse_additional_rw_user in data_warehouse_additional_rw_users %}
echo "Enter new password for role '{{ data_warehouse_additional_rw_user }}' (blank to skip): "
read password

if [ "$password" != "" ]; then
  # Note: localhost connection assumes SSH tunnel through bastion host.
  psql -a -b -d {{ application_data_warehouse_name }} -h localhost \
    -U {{ application_data_warehouse_admin_username }} -p {{ redshift_cluster_facts.results[0].endpoint.port }} -c "\x"  -c "ALTER USER {{ data_warehouse_additional_rw_user }} WITH PASSWORD '$password'"

    # Update AWS secrets
    aws secretsmanager update-secret --region "{{ region }}" \
      --secret-id "CodaMetrixApplication/DataWarehouseAdditionalRWUsers/{{ env }}-{{ data_warehouse_additional_rw_user | lower }}" \
      --description 'Credentials for "{{ data_warehouse_additional_rw_user }}" in the "{{ env }}" application environment.' \
      --kms-key-id '{{ application_secrets_kms_key_alias }}' \
      --secret-string '{"dbusername":"{{ data_warehouse_additional_rw_user | lower }}","dbpassword":"'$password'","dburl":"'$dburl'"}'
fi
{% endfor %}

# Update password on additional RW users
{% for data_warehouse_additional_superuser in data_warehouse_additional_superusers %}
echo "Enter new password for role '{{ data_warehouse_additional_superuser }}' (blank to skip): "
read password

if [ "$password" != "" ]; then
  # Note: localhost connection assumes SSH tunnel through bastion host.
  psql -a -b -d {{ application_data_warehouse_name }} -h localhost \
    -U {{ application_data_warehouse_admin_username }} -p {{ redshift_cluster_facts.results[0].endpoint.port }} -c "\x"  -c "ALTER USER {{ data_warehouse_additional_superuser }} WITH PASSWORD '$password'"

    # Update AWS secrets
    aws secretsmanager update-secret --region "{{ region }}" \
      --secret-id "CodaMetrixApplication/DataWarehouseAdditionalSuperUsers/{{ env }}-{{ data_warehouse_additional_superuser | lower }}" \
      --description 'Credentials for "{{ data_warehouse_additional_superuser }}" in the "{{ env }}" application environment.' \
      --kms-key-id '{{ application_secrets_kms_key_alias }}' \
      --secret-string '{"dbusername":"{{ data_warehouse_additional_superuser | lower }}","dbpassword":"'$password'","dburl":"'$dburl'"}'
fi
{% endfor %}

# Update the Redshift admin password
echo "Enter new password for role '{{ application_data_warehouse_admin_username }}' (blank to skip): "
read password

if [ "$password" != "" ]; then
  # Note: localhost connection assumes SSH tunnel through bastion host.
  psql -a -b -d {{ application_data_warehouse_name }} -h localhost \
    -U {{ application_data_warehouse_admin_username }} -p {{ redshift_cluster_facts.results[0].endpoint.port }} -c "\x" -c "ALTER USER {{ application_data_warehouse_admin_username }} WITH PASSWORD '$password'"

  # Update AWS secrets
  aws secretsmanager update-secret --region "{{ region }}" \
    --secret-id "CodaMetrixApplication/DataWarehouseAdmin/{{ env }}" \
    --description 'Credentials for "{{ application_data_warehouse_admin_username }}" in the "{{ env }}" application environment.' \
    --kms-key-id '{{ application_secrets_kms_key_alias }}' \
    --secret-string '{"dbusername":"{{ application_data_warehouse_admin_username }}","dbpassword":"'$password'","dburl":"'$dburl'"}'
fi
