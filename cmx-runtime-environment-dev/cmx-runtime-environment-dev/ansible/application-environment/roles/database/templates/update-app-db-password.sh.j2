#!/bin/bash
echo "Enter the application database root password: "
read rootpassword
export PGPASSWORD=$rootpassword

# Update password on database users.
{% for service in services %}
echo "Enter new password for role '{{ service }}' (blank to skip): "
read password

if [ "$password" != "" ]; then
  servicedburl="jdbc:postgresql://{{ app_db_facts.instances[0].endpoint.address }}/{{ service }}?ssl=true&sslmode=require"

  # Note: localhost connection assumes SSH tunnel through bastion host.
  psql -a -b -d {{ service }} -h localhost \
    -U {{ application_database_admin_username }} -c "\x" -c "ALTER USER {{ service }} WITH PASSWORD '$password'"

  # Update AWS secrets
  aws secretsmanager update-secret --region "{{ region }}" \
    --secret-id "CodaMetrixApplication/Database/{{ env }}-{{ service }}" \
    --kms-key-id '{{ application_secrets_kms_key_alias }}' \
    --secret-string '{"dbusername":"{{ service }}","dbpassword":"'$password'","dburl":"'$servicedburl'"}'
fi
{% endfor %}

# Update password on developers
{% for developer in developers %}
echo "Enter new password for role '{{ developer.name }}' (blank to skip): "
read password

if [ "$password" != "" ]; then
  {% for service in services %}
  # Note: localhost connection assumes SSH tunnel through bastion host.
  psql -a -b -d {{ service }} -h localhost \
    -U {{ application_database_admin_username }} -c "\x" -c "ALTER USER {{ developer.name }} WITH PASSWORD '$password'"
  {% endfor %}
fi
{% endfor %}

# Update password on additional users
{% for database_additional_user in database_additional_users %}
echo "Enter new password for role '{{ database_additional_user }}' (blank to skip): "
read password

if [ "$password" != "" ]; then
  {% for service in services %}
  # Note: localhost connection assumes SSH tunnel through bastion host.
  psql -a -b -d {{ service }} -h localhost \
    -U {{ application_database_admin_username }} -c "\x" -c "ALTER USER {{ database_additional_user }} WITH PASSWORD '$password'"
  {% endfor %}

  # Update AWS secrets
  aws secretsmanager update-secret --region "{{ region }}" \
    --secret-id "CodaMetrixApplication/DatabaseAdditionalUsers/{{ env }}-{{ database_additional_user | lower }}" \
    --description 'Credentials for "{{ database_additional_user }}" in the "{{ env }}" application environment.' \
    --kms-key-id '{{ application_secrets_kms_key_alias }}' \
    --secret-string '{"dbusername":"{{ database_additional_user | lower }}","dbpassword":"'$password'","dburl":"'$dburl'"}'
fi
{% endfor %}

# Update the database admin password
echo "Enter new password for role '{{ application_database_admin_username }}' (blank to skip): "
read password

if [ "$password" != "" ]; then
  export dburl="jdbc:postgresql://{{ app_db_facts.instances[0].endpoint.address }}/{{ application_database_name }}?ssl=true&sslmode=require"

  # Note: localhost connection assumes SSH tunnel through bastion host.
  psql -a -b -d {{ application_database_name }} -h localhost \
    -U {{ application_database_admin_username }} -c "\x" -c "ALTER USER {{ application_database_admin_username }} WITH PASSWORD '$password'"

  # Update AWS secrets
  aws secretsmanager update-secret --region "{{ region }}" \
    --secret-id "CodaMetrixApplication/DatabaseAdmin/{{ env }}" \
    --description 'Credentials for "{{ application_database_admin_username }}" in the "{{ env }}" application environment.' \
    --kms-key-id '{{ application_secrets_kms_key_alias }}' \
    --secret-string '{"dbusername":"{{ application_database_admin_username }}","dbpassword":"'$password'","dburl":"'$dburl'"}'
fi
