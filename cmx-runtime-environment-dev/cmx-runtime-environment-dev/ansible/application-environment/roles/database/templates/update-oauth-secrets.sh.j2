#!/bin/bash

{% for item in oauth_services %}
# Enter OAUTH Client ID
echo "ROTATING OAUTH SECRET: CodaMetrixApplication/OAuth/{{ env }}-{{ item }}"
echo "Enter the {{ item }} entry's client id (cmx-process-service, cmx-monitor-service) (Enter to Skip): "
read clientid
if [ -z "$clientid" ]
then
      echo "Skipping {{ item }}"
else
  export OAUTH_CLIENT_ID=$clientid
  echo "Enter Client Secret"
  read clientsecret
  export OAUTH_CLIENT_SECRET=$clientsecret
  export OAUTH_CLIENT_SECRET_ENCRYPTED=`htpasswd -bnBC 11 "" $OAUTH_CLIENT_SECRET | tr -d ':\n' | sed 's/$2y/$2a/'`

  # Rotate OAUTH Client Secret
  aws secretsmanager update-secret --region '{{ region }}' \
      --secret-id "CodaMetrixApplication/OAuth/{{ env }}-{{ item }}" \
      --description "OAuth Secret Created for Client ID $OAUTH_CLIENT_ID" \
      --kms-key-id '{{ application_secrets_kms_key_alias }}' \
      --secret-string "{\"oauthid\":\"$OAUTH_CLIENT_ID\", \"oauthsecret\":\"$OAUTH_CLIENT_SECRET\"}"

  # Get URI To User Service DB
  servicedburl="jdbc:postgresql://{{ app_db_facts.instances[0].endpoint.address }}/userservice?ssl=true&sslmode=require"

  # Update User with Client ID in User Service DB w/ the New Secret
  # Note: localhost connection assumes SSH tunnel through bastion host.
  psql -a -b -d userservice -h localhost \
    -U {{ application_database_admin_username }} -c "\x" -c "UPDATE oauth_client_details SET client_secret='$OAUTH_CLIENT_SECRET_ENCRYPTED' WHERE client_id='$OAUTH_CLIENT_ID'"
fi
{% endfor %}
