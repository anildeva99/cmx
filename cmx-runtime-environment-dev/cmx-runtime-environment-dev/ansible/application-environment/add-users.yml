---
- name: Update users preparatory tasks
  hosts: local
  connection: local
  gather_facts: false
  tasks:
    - name: Import application-common role
      import_role:
        name: application-common

    - name: Apply preparatory configuration for the bastion
      import_role:
        name: bastion
        tasks_from: pre.yml

    - name: Create local files and configuration for the bastion
      import_role:
        name: bastion
        tasks_from: locals.yml

    - name: Apply preparatory configuration for the application database
      import_role:
        name: database
        tasks_from: pre.yml

    - name: Create local files and configuration for the database
      import_role:
        name: database
        tasks_from: locals.yml

    - name: Apply preparatory configuration for the mirth databases
      import_role:
        name: mirth-database
        tasks_from: pre.yml

    - name: Create local files and configuration for the mirth database
      import_role:
        name: mirth-database
        tasks_from: locals.yml

    - name: Apply preparatory configuration for the data warehouse
      import_role:
        name: data-warehouse
        tasks_from: pre.yml

    - name: Create local files and configuration for the data warehouse
      import_role:
        name: data-warehouse
        tasks_from: locals.yml

    - name: Create temporary private key file for connecting to the bastion host
      vars:
        aws_secret_key_name_var: "{{ aws_secret_bastion_host_ubuntu_private_key }}"
        localhost_key_path_var: "{{ bastion_host_ubuntu_private_key_path }}"
      import_role:
        name: application-secret
        tasks_from: create-temporary-key-file.yml

    # Exporting public keys, necessary for generating the terraform vars file
    - name: Export the customer networking router public key to env
      vars:
        state: present
        aws_secret_private_key_var: "{{ aws_secret_customer_networking_private_key }}"
        aws_secret_keypair_public_key: customer_networking_keypair_public_key
      import_role:
        name: application-secret
        tasks_from: export-publickey-to-env.yml

    - name: Export the ingress mirth public key to env
      vars:
        state: present
        aws_secret_private_key_var: "{{ aws_secret_ingress_mirth_ubuntu_private_key }}"
        aws_secret_keypair_public_key: ingress_mirth_keypair_public_key
      import_role:
        name: application-secret
        tasks_from: export-publickey-to-env.yml

    - name: Export ec2-user's public key for worker nodes to env
      vars:
        state: present
        aws_secret_private_key_var: "{{ aws_secret_worker_node_private_key }}"
        aws_secret_keypair_public_key: worker_node_keypair_public_key
      import_role:
        name: application-secret
        tasks_from: export-publickey-to-env.yml

    - name: Export baston host public key to env
      vars:
        state: present
        aws_secret_private_key_var: "{{ aws_secret_bastion_host_ubuntu_private_key }}"
        aws_secret_keypair_public_key: bastion_host_keypair_public_key
      import_role:
        name: application-secret
        tasks_from: export-publickey-to-env.yml

    - name: Export ec2-user's public key for data lake nodes to env
      vars:
        state: present
        aws_secret_private_key_var: "{{ aws_secret_data_lake_emr_host_private_key }}"
        aws_secret_keypair_public_key: data_lake_emr_host_keypair_public_key
      import_role:
        name: application-secret
        tasks_from: export-publickey-to-env.yml

    - name: Create local files needed for running Terraform
      environment:
        TF_DATA_DIR: "{{ terraform_path }}/.terraform-{{ env }}"
      import_role:
        name: environment
        tasks_from: locals.yml

- name: Add users to the bastion host tasks
  hosts: bastion
  gather_facts: false
  vars:
    ansible_ssh_args: "-C -F {{ temp_directory }}/ssh-{{ env }}.cfg"
    state: present
  tasks:
    - name: Import application-common role
      import_role:
        name: application-common

    - name: Add user to the bastion host
      block:
        - import_role:
            name: bastion
            tasks_from: configure-bastion.yml
      rescue:
        - name: Fail, likely because secrets need to be added via running terraform
          fail:
            msg: |
              Failed to add users to the bastion. Run terraform plan, it may be necessary to add secrets
              for users, but be sure that there are no other changes waiting to be applied.

- name: Add users to the ingress_bastion host tasks
  hosts: ingress_bastion
  gather_facts: false
  vars:
    ansible_ssh_args: "-C -F {{ temp_directory }}/ssh-{{ env }}-ingress.cfg"
    state: present
  tasks:
    - name: Import application-common role
      import_role:
        name: application-common

    - name: Add user to the ingress bastion host
      block:
        - import_role:
            name: bastion
            tasks_from: configure-bastion.yml
      rescue:
        - name: Fail, likely because secrets need to be added via running terraform
          fail:
            msg: |
              Failed to add users to the bastion. Run terraform plan, it may be necessary to add secrets
              for users, but be sure that there are no other changes waiting to be applied.

- name: Add users to the application database
  hosts: bastion
  gather_facts: false
  vars:
    ansible_ssh_args: "-C -F {{ temp_directory }}/ssh-{{ env }}.cfg"
    state: present
  tasks:
    - name: Import application-common role
      import_role:
        name: application-common

    - name: Add users to the application database
      vars:
        database_address: "{{ hostvars['localhost']['app_db_facts'].instances[0].endpoint.address }}"
        database_credentials: "{{ lookup('aws_secret',
          'CodaMetrixApplication/DatabaseAdmin/' + env,
          region=region) }}"
      import_role:
        name: database
        tasks_from: configure-users.yml

- name: Add users to the application Mirth database
  hosts: bastion
  gather_facts: false
  vars:
    ansible_ssh_args: "-C -F {{ temp_directory }}/ssh-{{ env }}.cfg"
    state: present
  tasks:
    - name: Import application-common role
      import_role:
        name: application-common

    - name: Add users to the application Mirth database
      vars:
        database_address: "{{ hostvars['localhost']['application_mirth_database_facts'].instances[0].endpoint.address }}"
        database_credentials: "{{ lookup('aws_secret',
          mirth_database_admin_secret_name,
          region=region) }}"
      import_role:
        name: mirth-database
        tasks_from: configure-database.yml

- name: Add users to the ingress mirth database
  hosts: ingress_bastion
  gather_facts: false
  vars:
    ansible_ssh_args: "-C -F {{ temp_directory }}/ssh-{{ env }}-ingress.cfg"
    state: present
  tasks:
    - name: Import application-common role
      import_role:
        name: application-common

    - name: Add users to the ingress mirth database
      vars:
        database_address: "{{ hostvars['localhost']['ingress_mirth_database_facts'].instances[0].endpoint.address }}"
        database_credentials: "{{ lookup('aws_secret',
          ingress_mirth_database_admin_secret_name,
          region=region) }}"
      import_role:
        name: mirth-database
        tasks_from: configure-database.yml

- name: Add users to the data warehouse
  hosts: bastion
  gather_facts: false
  vars:
    ansible_ssh_args: "-C -F {{ temp_directory }}/ssh-{{ env }}.cfg"
    state: present
  tasks:
    - name: Import application-common role
      import_role:
        name: application-common

    - name: Add users to the data warehouse
      vars:
        dw_address: "{{ hostvars['localhost']['redshift_cluster_facts'].results[0].endpoint.address }}"
        dw_credentials: "{{ lookup('aws_secret',
          'CodaMetrixApplication/DataWarehouseAdmin/' + env,
          region=region) }}"
      import_role:
        name: data-warehouse
        tasks_from: configure-users.yml

- name: Add users post tasks
  hosts: local
  connection: local
  gather_facts: false
  vars:
    state: present
  tasks:
    - name: Import application-common role
      import_role:
        name: application-common

    - name: Delete temporary private key file for ubuntu user of bastion host
      vars:
        localhost_temporary_key_path_var: "{{ bastion_host_ubuntu_private_key_path }}"
      import_role:
        name: application-secret
        tasks_from: delete-temporary-key-file.yml

- name: Import deploy-cluster-bastion.yml
  import_playbook: deploy-cluster-bastion.yml
