#!/bin/bash
export dburl="jdbc:postgresql://{{ mirth_database_facts.instances[0].endpoint.address }}/{{ mirth_database_name }}?ssl=true&sslmode=require"
export dbport=5432

echo "Enter the Mirth database root password: "
read rootpassword
export PGPASSWORD=$rootpassword

# Update password on Mirth user.
echo "Enter new password for role '{{ mirth_database_username }}' (blank to skip): "
read password

if [ "$password" != "" ]; then
  # Note: localhost connection assumes SSH tunnel through bastion host.
  psql -a -b -d {{ mirth_database_name }} -h localhost -p $dbport \
    -U {{ mirth_database_admin_username }} -c "\x" -c "ALTER USER {{ mirth_database_username }} WITH PASSWORD '$password'"

  # Update AWS secrets
  aws secretsmanager update-secret --region "{{ region }}" \
    --secret-id "{{ mirth_database_secret_name }}" \
    --kms-key-id '{{ secrets_kms_key_alias }}' \
    --secret-string '{"dbusername":"{{ mirth_database_username }}","dbpassword":"'$password'","dburl":"'$dburl'"}'
fi

# Update password on engineers
{% for engineer in engineers %}
echo "Enter new password for role '{{ engineer.name }}' (blank to skip): "
read password

if [ "$password" != "" ]; then
  # Note: localhost connection assumes SSH tunnel through bastion host.
  psql -a -b -d {{ mirth_database_name }} -h localhost -p $dbport  \
    -U {{ mirth_database_admin_username }} -c "\x" -c "ALTER USER {{ engineer.name }} WITH PASSWORD '$password'"
fi
{% endfor %}

# Update the database admin password
echo "Enter new password for role '{{ mirth_database_admin_username }}' (blank to skip): "
read password

if [ "$password" != "" ]; then
  # Note: localhost connection assumes SSH tunnel through bastion host.
  psql -a -b -d {{ mirth_database_name }} -h localhost -p $dbport \
    -U {{ mirth_database_admin_username }} -c "\x" -c "ALTER USER {{ mirth_database_admin_username }} WITH PASSWORD '$password'"

  # Update AWS secrets
  aws secretsmanager update-secret --region "{{ region }}" \
    --secret-id "{{ mirth_database_admin_secret_name }}" \
    --description 'Credentials for "{{ mirth_database_admin_username }}" in the "{{ env }}" environment.' \
    --kms-key-id '{{ secrets_kms_key_alias }}' \
    --secret-string '{"dbusername":"{{ mirth_database_admin_username }}","dbpassword":"'$password'","dburl":"'$dburl'"}'
fi
